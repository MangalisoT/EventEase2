// <auto-generated />
using System;
using Event_Ease.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Event_Ease.Migrations
{
    [DbContext(typeof(Event_EaseContext))]
    [Migration("20250319182533_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Event_Ease.Models.Booking", b =>
                {
                    b.Property<int>("Booking_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_ID"));

                    b.Property<DateOnly?>("BookingDate")
                        .HasColumnType("date");

                    b.Property<int?>("Event_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Event_ID1")
                        .HasColumnType("int");

                    b.Property<int?>("Venue_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Venue_ID1")
                        .HasColumnType("int");

                    b.HasKey("Booking_ID");

                    b.HasIndex("Event_ID1");

                    b.HasIndex("Venue_ID1");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Event_Ease.Models.Event", b =>
                {
                    b.Property<int>("Event_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Event_ID"));

                    b.Property<DateOnly?>("EventDate")
                        .HasColumnType("date");

                    b.Property<string>("EventDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Event_ID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("Event_Ease.Models.Venue", b =>
                {
                    b.Property<int>("Venue_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Venue_ID"));

                    b.Property<int?>("VenueCapacity")
                        .HasColumnType("int");

                    b.Property<string>("VenueImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Venue_ID");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("Event_Ease.Models.Booking", b =>
                {
                    b.HasOne("Event_Ease.Models.Event", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("Event_ID1");

                    b.HasOne("Event_Ease.Models.Venue", "Venue")
                        .WithMany("Bookings")
                        .HasForeignKey("Venue_ID1");

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Event_Ease.Models.Event", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Event_Ease.Models.Venue", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
